name: "VM On Scaleway"

on:
#   push:
#     branches:
#       - main
  pull_request:
  workflow_dispatch: #this attribute will enable the manual run to the pipeline
env:
  SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
  SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
  ROOT_PATH: '${{github.workspace}}'
  
jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: terraform init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}

  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
 
    - name: terraform Init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

      #github.ref == 'refs/heads/main' && github.event_name == 'push'
#     - name: terraform Apply
#       run: terraform apply -auto-approve
#       if: ${{inputs.tf_destroy}} == false
#       working-directory: ${{ env.ROOT_PATH }}
      
    - name: terraform destroy
      run: terraform destroy -auto-approve
      if: ${{inputs.tf_destroy}} == true
      working-directory: ${{ env.ROOT_PATH }}
